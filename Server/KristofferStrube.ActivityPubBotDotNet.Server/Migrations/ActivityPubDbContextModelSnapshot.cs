// <auto-generated />
using KristofferStrube.ActivityPubBotDotNet.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KristofferStrube.ActivityPubBotDotNet.Server.Migrations
{
    [DbContext(typeof(ActivityPubDbContext))]
    partial class ActivityPubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("KristofferStrube.ActivityPubBotDotNet.Server.FollowRelation", b =>
                {
                    b.Property<string>("FollowerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FollowedId")
                        .HasColumnType("TEXT");

                    b.HasKey("FollowerId", "FollowedId");

                    b.HasIndex("FollowedId");

                    b.ToTable("FollowRelations");
                });

            modelBuilder.Entity("KristofferStrube.ActivityPubBotDotNet.Server.UserInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KristofferStrube.ActivityPubBotDotNet.Server.FollowRelation", b =>
                {
                    b.HasOne("KristofferStrube.ActivityPubBotDotNet.Server.UserInfo", "Followed")
                        .WithMany("Following")
                        .HasForeignKey("FollowedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KristofferStrube.ActivityPubBotDotNet.Server.UserInfo", "Follower")
                        .WithMany("Followers")
                        .HasForeignKey("FollowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Followed");

                    b.Navigation("Follower");
                });

            modelBuilder.Entity("KristofferStrube.ActivityPubBotDotNet.Server.UserInfo", b =>
                {
                    b.Navigation("Followers");

                    b.Navigation("Following");
                });
#pragma warning restore 612, 618
        }
    }
}
